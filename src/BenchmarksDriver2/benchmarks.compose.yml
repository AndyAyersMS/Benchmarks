variables:
  header-sets:
    none: ''
    plaintext: "--header Accept:text/plain,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7
      --header Connection:keep-alive"
    connection-close: "--header Connection:close"
  preset-headers: plaintext
jobs:
  aspnetbenchmarks:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/Benchmarks/Benchmarks.csproj
    readyStateText: Application started.
    variables:
      connection-header: "--header Connection:keep-alive"
      protocol: http
      server: Kestrel
      transport: Sockets
      scenario: plaintext
    scenario: Benchmarks
    arguments: "--nonInteractive true --scenarios {{scenario}} --server-urls {{protocol}}://[*]:5000
      --server {{server}} --kestrelTransport {{transport}} --protocol {{protocol}}"
  pipelineclient:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/PipeliningClient/PipeliningClient.csproj
    readyStateText: Starting
    sdkVersion: 3.0.100
    aspNetCoreVersion: '3.0'
    runtimeVersion: '3.0'
    waitForExit: true
    scenario: PipelineClient
    variables:
      connections: 256
      warmup: 5
      duration: 5
      pipeline: 1
      min: 0
      rate: 0
      interval: 1
      preset-headers: none
    arguments: --url "{{serverUri}}{{path}}" --connections {{connections}} {% if min
      != 0 %} -m {{ min }} {% endif %} {% if rate != 0 %} -r {{ rate }} {% endif %}
      {% if interval != 1 %} -i {{ interval }} {% endif %} --warmup {{warmup}} --duration
      {{duration}} --pipeline {{pipeline}} {{header-sets[preset-headers]}}
  bombardier:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/BombardierClient/BombardierClient.csproj
    options:
      displayOutput: true
    readyStateText: Bombardier Client
    sdkVersion: 3.0.100
    aspNetCoreVersion: '3.0'
    runtimeVersion: '3.0'
    waitForExit: true
    scenario: Bombardier
    variables:
      connections: 256
      warmup: 5
      duration: 5
    arguments: "-c {{connections}} {{serverUri}}{{path}} -d {{duration}}s -l {{header-sets[preset-headers]}}"
  wrk:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/WrkClient/WrkClient.csproj
    options:
      displayOutput: true
    readyStateText: 'Running '
    sdkVersion: 3.0.100
    aspNetCoreVersion: '3.0'
    runtimeVersion: '3.0'
    noArguments: true
    waitForExit: true
    scenario: Wrk
    variables:
      connections: 256
      duration: '15'
      threads: 32
    arguments: "-c {{connections}} {{serverUri}}{{path}} -d {{duration}}s -t {{threads}}
      {{header-sets[preset-headers]}}"
  postgresql:
    source:
      repository: https://github.com/TechEmpower/FrameworkBenchmarks.git
      branchOrCommit: master
      dockerFile: toolset/databases/postgres/postgres.dockerfile
      dockerImageName: postgres
      dockerContextDirectory: toolset/databases/postgres/
    scenario: PostgresQL
scenarios:
  plaintext:
    application:
      job: aspnetbenchmarks
      variables:
        path: "/plaintext"
    load:
      job: pipelineclient
      variables:
        pipeline: 16
  connectionClose:
    application:
      job: aspnetbenchmarks
      variables:
        path: "/plaintext"
    load:
      job: pipelineclient
      variables:
        pipeline: 1
        preset-headers: connection-close
