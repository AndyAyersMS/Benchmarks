{
  "variables": {
    "header-sets": {
      "none": "",
      "plaintext": "--header Accept:text/plain,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7 --header Connection:keep-alive",
      "connection-close": "--header Connection:close"
    },
    "preset-headers": "plaintext",
    "serverUri": null,
    "path": null
  },
  "dependencies": [ "aspnetbenchmarks", "wrk" ],
  "services": {
    "aspnetbenchmarks": {
      "source": {
        "repository": "https://github.com/aspnet/benchmarks.git",
        "branchOrCommit": "master",
        "project": "src/Benchmarks/Benchmarks.csproj"
      },
      "readyStateText": "Application started.", // The text in the console that informs the server it has started
      "variables": {
        "connection-header": "--header Connection:keep-alive",
        "protocol": "http",
        "server": "Kestrel",
        "transport": "Sockets",
        "scenario": "plaintext"
      },
      "scenario": "Benchmarks",
      "arguments": "--nonInteractive true --scenarios {{scenario}} --server-urls {{protocol}}://[*]:5000 --server {{server}} --kestrelTransport {{transport}} --protocol {{protocol}}"
    },
    "pipelineclient": {
      "source": {
        "repository": "https://github.com/aspnet/benchmarks.git",
        "branchOrCommit": "master",
        "project": "src/PipeliningClient/PipeliningClient.csproj"
      },
      "isConsoleApp": true,
      "readyStateText": "Starting",
      "sdkVersion": "3.0.100",
      "aspnetcoreversion": "3.0",
      "runtimeversion": "3.0",
      "noArguments": true,
      "waitForExit": true, // Blocking
      "scenario": "PipelineClient",
      // "span": "1:00:00", // Keeps repeating the jobs for this duration
      "variables": {
        "connections": 256,
        "warmup": 5,
        "duration": 5,
        "pipeline": 16,
        "preset-headers": "none"
      },
      "arguments": "--url \"{{serverUri}}{{path}}\" --connections {{connections}} --warmup {{warmup}} --duration {{duration}} --pipeline {{pipeline}} {{header-sets[preset-headers]}}"
    },
    "bombardier": {
      "source": {
        "repository": "https://github.com/aspnet/benchmarks.git",
        "branchOrCommit": "master",
        "project": "src/BombardierClient/BombardierClient.csproj"
      },
      "options": {
        "displayOutput": true
      },
      "readyStateText": "Bombardier Client",
      "sdkVersion": "3.0.100",
      "aspnetcoreversion": "3.0",
      "runtimeversion": "3.0",
      "noArguments": true,
      "waitForExit": true, // Blocking
      "scenario": "Bombardier",
      // "span": "1:00:00", // Keeps repeating the jobs for this duration
      "variables": {
        "connections": 256,
        "warmup": 5,
        "duration": 5,
        "pipeline": 16
      },
      "arguments": "-c {{connections}} {{serverUri}}{{path}} -d {{duration}}s -l {{header-sets[preset-headers]}}"
    },
    "wrk": {
      "source": {
        "repository": "https://github.com/aspnet/benchmarks.git",
        "branchOrCommit": "master",
        "project": "src/WrkClient/WrkClient.csproj"
      },
      "options": {
        "displayOutput": true
      },
      "readyStateText": "Running ",
      "sdkVersion": "3.0.100",
      "aspnetcoreversion": "3.0",
      "runtimeversion": "3.0",
      "noArguments": true,
      "waitForExit": true, // Blocking
      "scenario": "Wrk",
      "variables": {
        "connections": 256,
        "duration": "15",
        "threads": 32 
      },
      "arguments": "-c {{connections}} {{serverUri}}{{path}} -d {{duration}}s -t {{threads}} {{header-sets[preset-headers]}}"
    },
    "postgresql": {
      "source": {
        "repository": "https://github.com/TechEmpower/FrameworkBenchmarks.git",
        "branchOrCommit": "master",
        "dockerfile": "toolset/databases/postgres/postgres.dockerfile",
        "dockerImageName": "postgres",
        "dockerContextDirectory": "toolset/databases/postgres/"
      },
      "scenario": "PostgresQL"
    }
  },
  "profiles": {
    "plaintext": {
      "variables": {
        "path": "/plaintext",
        "scenario": "Plaintext"
      }
    },
    "plaintextNonPipelined": {
      "variables": {
        "path": "/plaintext",
        "scenario": "plaintext"
      },
      "services": {
        "load": {
          "variables": {
            "pipeline": 1
          }
        }
      }
    },
    "mvcPlaintext": {
      "variables": {
        "path": "/mvc/plaintext",
        "scenario": "mvcplaintext"
      }
    },
    "connectionClose": {
      "variables": {
        "path": "/plaintext",
        "scenario": "plaintext",
        "preset-headers": "connection-close"
      },
      "services": {
        "load": {
          "variables": {
            "pipeline": 1
          }
        }
      }
    }
  }
}

/*

dotnet run -- 
  --services.application.endpoints http://asp-perf-lin:5001 
  --services.load.endpoints http://asp-perf-load:5001 
  --services.load.endpoints http://asp-perf-db:5001 

  --services.application.source.branchOrCommit issue/1234
  --services.application.source.branchOrCommit #e9b0d8
  --services.application.source.repository https://github.com/aspnet/aspnetcore
  --services.application.source.project src/Benchmarks/Benchmarks.csproj
  --services.application.source.initSubmodules true|(false)

  --services.application.source.dockerFile frameworks/Rust/actix/actix-raw.dockerfile
  --services.application.source.dockerImageName actix_raw
  --services.application.source.dockerContextDirectory frameworks/Rust/actix/
  --services.application.source.dockerFetchPath ./output    The path in the Docker container that contains the base path for the --fetch argument.
    

  --config benchmarks.compose.json
  --config benchmarks.databases.json

  --profile plaintext

  --services.load.variables.warmup 0
  --variables.serverIp 10.10.10.5

  --dependencies postgres:0 // insert postgres at position 0 of dependencies

  // Some features can be applied on any service

  --services.application.features dotnet-trace
  --services.load.features dotnet-trace:gc-verbose

  --services.application.sdk 5.0.100-alpha1-015721
  --services.load.span 1:00:00


*/
