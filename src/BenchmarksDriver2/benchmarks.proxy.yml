# Examples:
# --config benchmarks.proxy.yml --scenario proxy-httpclient --profile aspnet-physical 
# --config benchmarks.proxy.yml --scenario proxy-nginx --profile aspnet-physical 
# --config benchmarks.proxy.yml --scenario proxy-haproxy --profile aspnet-physical 

imports:
  - https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/Wrk2Client/wrk2.yml
  - https://raw.githubusercontent.com/aspnet/Benchmarks/master/src/BombardierClient/bombardier.yml
variables:
  downstreamUri: http://tfb-database:5000
jobs:
  httpclientproxy:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/Proxy/Proxy.csproj
    readyStateText: Application started.
    variables:
    arguments: --baseUri {{downstreamUri}}
  nginxproxy:
    source:
      Repository: https://github.com/aspnet/benchmarks.git
      BranchOrCommit: master
      DockerFile: docker/nginx/nginx.dockerfile
      DockerImageName: nginx-reverseproxy
      DockerContextDirectory: docker/nginx
  haproxyproxy:
    source:
      Repository: https://github.com/aspnet/benchmarks.git
      BranchOrCommit: master
      DockerFile: docker/haproxy/haproxy.dockerfile
      DockerImageName: haproxy-reverseproxy
      DockerContextDirectory: docker/haproxy
  downstream:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/Downstream/Downstream.csproj
    readyStateText: Application started.
    sdkVersion: 3.0.100
    aspNetCoreVersion: '3.0'
    runtimeVersion: '3.0'
    variables:
      downstreamPort: 5000
    arguments: --baseUri http://*:{{downstreamPort}}
scenarios:
  proxy-httpclient:
    downstream:
      job: downstream
    application: # custom name for a service to deploy
      job: httpclientproxy
    warmup:
      job: bombardier
      variables:
        serverPort: 5000
        path: /
    load:
      job: bombardier
      variables:
        serverPort: 5000
        path: /
      options:
        displayOutput: true
  proxy-nginx:
    downstream:
      job: downstream
    application:
      job: nginxproxy
    warmup:
      job: bombardier
      variables:
        serverPort: 8080
        path: /
    load:
      job: bombardier
      variables:
        serverPort: 8080
        path: /
  proxy-haproxy:
    downstream:
      job: downstream
    application:
      job: haproxyproxy
    warmup:
      job: bombardier
      variables:
        serverPort: 8080
        path: /
    load:
      job: bombardier
      variables:
        serverPort: 8080
        path: /
profiles:
  aspnet-physical:
    variables:
      serverUri: http://10.0.0.102
    jobs:
      downstream:
        endpoints: 
          - http://asp-perf-db:6001
      application:
        endpoints: 
          - http://asp-perf-lin:5001
      warmup:
        endpoints: 
          - http://asp-perf-load:5001
      load:
        endpoints: 
          - http://asp-perf-load:5001
        options:
          displayOutput: true
  aspnet-citrine:
    variables:
      serverUri: http://10.0.0.102
    jobs: 
      downstream:
        endpoints: 
          - http://asp-citrine-db:6001
      application:
        endpoints: 
          - http://asp-citrine-lin:5001
      warmup:
        endpoints: 
          - http://asp-citrine-load:5001
      load:
        endpoints: 
          - http://asp-citrine-load:5001
