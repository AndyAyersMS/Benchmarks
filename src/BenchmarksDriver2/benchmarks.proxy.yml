variables:
  headers:
    none:
    plaintext: --header Accept:text/plain,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7 --header Connection:keep-alive
    connectionclose: --header Accept:text/plain,text/html;q=0.9,application/xhtml+xml;q=0.9,application/xml;q=0.8,*/*;q=0.7 --header Connection:close
  presetHeaders: plaintext
jobs:
  httpclientproxy:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/Proxy/Proxy.csproj
    readyStateText: Application started.
    variables:
      baseUri: http://TFB-database:5001
    arguments: --baseUri {{baseUri}}
  nginxproxy:
    source:
      Repository: https://github.com/aspnet/benchmarks.git
      BranchOrCommit: master
      DockerFile: docker/nginx/nginx.dockerfile
      DockerImageName: nginx-reverseproxy
      DockerContextDirectory: docker/nginx
  haproxyproxy:
    source:
      Repository: https://github.com/aspnet/benchmarks.git
      BranchOrCommit: master
      DockerFile: docker/haproxy/haproxy.dockerfile
      DockerImageName: haproxy-reverseproxy
      DockerContextDirectory: docker/haproxy
  bombardier:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/BombardierClient/BombardierClient.csproj
    readyStateText: Bombardier Client
    sdkVersion: 3.0.100
    aspNetCoreVersion: 3.0
    runtimeVersion: 3.0
    waitForExit: true
    variables:
      connections: 256
      duration: 5
    arguments: -c {{connections}} {{serverUri}}:{{serverPort}}{{path}} -d {{duration}}s -l {{headers[presetHeaders]}}
  wrk2:
    source:
      repository: https://github.com/aspnet/benchmarks.git
      branchOrCommit: master
      project: src/Wrk2Client/Wrk2Client.csproj
    readyStateText: WRK2 Client
    sdkVersion: 3.0.100
    aspNetCoreVersion: 3.0
    runtimeVersion: 3.0
    waitForExit: true
    variables:
      connections: 256
      thread: 12
      duration: 5
      rate: 500
    arguments: -c {{connections}} -d {{duration}}s {{headers[presetHeaders]}} -L -R {{rate}} {{serverUri}}:{{serverPort}}{{path}} 
scenarios:
  proxy-httpclient:
    application: # custom name for a service to deploy
      job: httpclientproxy
    warmup:
      job: bombardier
      variables:
        serverPort: 5000
        path: /
    load:
      job: bombardier
      variables:
        serverPort: 5000
        path: /
      options:
        displayOutput: true
  proxy-nginx:
    application:
      job: nginxproxy
    load:
      job: wrk2
      variables:
        serverPort: 8080
        path: /
  proxy-haproxy:
    application:
      job: haproxyproxy
    warmup:
      job: bombardier
      variables:
        serverPort: 8080
        path: /
    load:
      job: bombardier
      variables:
        serverPort: 8080
        path: /
profiles:
  aspnet-physical:
    variables:
      serverUri: http://10.0.0.102
    jobs:
      application:
        endpoints: 
          - http://asp-perf-lin:5001
      warmup:
        endpoints: 
          - http://asp-perf-win:5001
      load:
        endpoints: 
          - http://asp-perf-win:5001
        options:
          displayOutput: true
  aspnet-citrine:
    variables:
      serverUri: http://10.0.0.102
    jobs: 
      application:
        endpoints: 
          - http://asp-citrine-lin:5001
      warmup:
        endpoints: 
          - http://asp-citrine-win:5001
      load:
        endpoints: 
          - http://asp-citrine-win:5001
